# Destroy Azure Resources Workflow
name: Destroy

on:
  workflow_dispatch:
    inputs:
        environment:
          description: 'Environment to destroy (dev/qa/main)'
          required: true
          type: choice
          options:
            - dev
            - qa
            - main

permissions:
  id-token: write
  contents: read

jobs:
  destroy_frontend:
    name: Destroy Resources
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}  # Use the branch name as environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Terraform Environment Variables
        run: |
          echo "TF_VAR_az_client_id=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_az_tenant_id=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_az_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_az_container_name=${{ vars.AZURE_BKD_CONTAINER_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=${{ vars.AZURE_BKD_RGROUP_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_storage_account_name=${{ vars.AZURE_BKD_SA_NAME }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infra  # Use the new frontend directory
        run: terraform init -backend-config="resource_group_name=${{ vars.AZURE_BKD_RGROUP_NAME }}" -backend-config="storage_account_name=${{ vars.AZURE_BKD_SA_NAME }}" -backend-config="container_name=${{ vars.AZURE_BKD_CONTAINER_NAME }}" -backend-config="key=archie-${{ github.ref_name }}.tfstate"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Destroy
        working-directory: ./infra  # Use the new infra directory
        run: terraform destroy -var-file="${{ github.event.inputs.environment }}.tfvars" -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true


  destroy:
    name: Destroy Backend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }} # Use environment specified in workflow dispatch
    needs: destroy_frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Destroy Azure Resources
        run: |
          # Define variables for backend resources
          az_backend_rg_name="${{ vars.AZURE_BKD_RGROUP_NAME }}"
          az_location="${{ vars.AZURE_LOCATION }}"
          
          # Get the storage account name for backend
          az_backend_sa_name=$(az storage account list --resource-group $az_backend_rg_name --query '[0].name' -o tsv)

          # Delete storage account if it exists
          if ! az storage account show --name $az_backend_sa_name --resource-group $az_backend_rg_name &> /dev/null; then
            echo "Storage account $az_backend_sa_name does not exist in $az_backend_rg_name. Skipping deletion."
          else
            az storage account delete --name $az_backend_sa_name --resource-group $az_backend_rg_name --yes
          fi

          # Delete backend resource group if it exists
          if ! az group show --name $az_backend_rg_name &> /dev/null; then
            echo "Resource group $az_backend_rg_name does not exist. Skipping deletion."
          else
            az group delete --name $az_backend_rg_name --yes --no-wait
          fi